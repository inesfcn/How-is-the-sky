{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\nimport SkyColor from \"./SkyColor\";\n\nfunction DisplaySky({\n  city,\n  temp,\n  desc,\n  currentTime,\n  clouds,\n  dateTimeZone,\n  convertTimeZone,\n  lat,\n  lon\n}) {\n  // No decimal value for temperature\n  let temperature = parseInt(temp);\n  console.log(temp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: temp\n  }, void 0, false) // <div className=\"info-displays\">\n  //     <div className=\"infoDisplay\">\n  //         <h1 className=\"city-info\">{city}</h1>\n  //         <h1 className=\"time-info\"> | {currentTime}</h1>\n  //         <h1 className=\"temp-info\"> | {temperature}°C</h1>\n  //         <h1 className=\"temp-desc\"> | {desc}</h1>\n  //         <h1 className=\"temp-clouds\"> | clouds: {clouds}%</h1>\n  //     </div>\n  //     {/* <button type=\"button\" className=\"anotherCity\" onClick={()=>setSubmit(false)}>Check another city</button> */}\n  // </div>\n  // <SkyColor\n  // clouds={clouds}\n  // dateTimeZone={dateTimeZone}\n  // convertTimeZone={convertTimeZone}\n  // lat={lat}\n  // lon={lon}\n  // />\n  ;\n}\n\n_c = DisplaySky;\nexport default DisplaySky;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaySky\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx"],"names":["React","SkyColor","DisplaySky","city","temp","desc","currentTime","clouds","dateTimeZone","convertTimeZone","lat","lon","temperature","parseInt","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,IAAN;AAAWC,EAAAA,IAAX;AAAgBC,EAAAA,WAAhB;AAA4BC,EAAAA,MAA5B;AAAmCC,EAAAA,YAAnC;AAAgDC,EAAAA,eAAhD;AAAgEC,EAAAA,GAAhE;AAAoEC,EAAAA;AAApE,CAApB,EAA6F;AACzF;AACA,MAAIC,WAAW,GAAGC,QAAQ,CAACT,IAAD,CAA1B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBACA;AAAA,cAAGA;AAAH,mBADA,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBH;;KA3BQF,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport SkyColor from \"./SkyColor\"\n\nfunction DisplaySky({city,temp,desc,currentTime,clouds,dateTimeZone,convertTimeZone,lat,lon}){\n    // No decimal value for temperature\n    let temperature = parseInt(temp)\n    console.log(temp);\n   \n    return(\n    <>{temp}\n    </>\n    // <div className=\"info-displays\">\n    //     <div className=\"infoDisplay\">\n    //         <h1 className=\"city-info\">{city}</h1>\n    //         <h1 className=\"time-info\"> | {currentTime}</h1>\n    //         <h1 className=\"temp-info\"> | {temperature}°C</h1>\n    //         <h1 className=\"temp-desc\"> | {desc}</h1>\n    //         <h1 className=\"temp-clouds\"> | clouds: {clouds}%</h1>\n    //     </div>\n    //     {/* <button type=\"button\" className=\"anotherCity\" onClick={()=>setSubmit(false)}>Check another city</button> */}\n\t// </div>\n    // <SkyColor\n    // clouds={clouds}\n    // dateTimeZone={dateTimeZone}\n    // convertTimeZone={convertTimeZone}\n    // lat={lat}\n    // lon={lon}\n    // />\n    \n    )\n}\n\nexport default DisplaySky"]},"metadata":{},"sourceType":"module"}