{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\n\nfunction Sunset({\n  dateTimeZone,\n  lat,\n  lon,\n  convertTimeZone\n}) {\n  const SunCalc = require('suncalc');\n\n  const sunCalcData = SunCalc.getTimes(dateTimeZone, lat, lon);\n  const goldenHourEvening = sunCalcData.goldenHour;\n  const goldenHourMorning = sunCalcData.goldenHourEnd;\n  const sunsetTime = sunCalcData.sunset;\n  const sunsetTimeTimeZone = convertTimeZone(\"sunset:\", sunsetTime, \"golden:\", goldenHourEvening);\n  console.log(sunsetTimeTimeZone);\n  /*    if (dateTimeZone>=goldenHourStart && dateTimeZone<=goldenHourEnd ) {\n         document.body.style.background = \"linear-gradient(90deg, rgba(182,110,0,1) 0%, rgba(230,170,15,1) 35%, rgba(255,214,0,1) 100%)\";\n     } */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Sunset;\nexport default Sunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sunset\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/Sunset.jsx"],"names":["React","Sunset","dateTimeZone","lat","lon","convertTimeZone","SunCalc","require","sunCalcData","getTimes","goldenHourEvening","goldenHour","goldenHourMorning","goldenHourEnd","sunsetTime","sunset","sunsetTimeTimeZone","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAiB;AAAEC,EAAAA,YAAF;AAAeC,EAAAA,GAAf;AAAmBC,EAAAA,GAAnB;AAAuBC,EAAAA;AAAvB,CAAjB,EAAyD;AACrD,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,WAAW,GAAGF,OAAO,CAACG,QAAR,CAAiBP,YAAjB,EAA8BC,GAA9B,EAAkCC,GAAlC,CAApB;AACA,QAAMM,iBAAiB,GAAGF,WAAW,CAACG,UAAtC;AACA,QAAMC,iBAAiB,GAAGJ,WAAW,CAACK,aAAtC;AACA,QAAMC,UAAU,GAAGN,WAAW,CAACO,MAA/B;AAEA,QAAMC,kBAAkB,GAAGX,eAAe,CAAC,SAAD,EAAWS,UAAX,EAAuB,SAAvB,EAAiCJ,iBAAjC,CAA1C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,kBAAZ;AAEH;AACD;AACA;;AAEI,sBAAO,qCAAP;AAEH;;KAjBQf,M;AAmBT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nfunction Sunset ({ dateTimeZone,lat,lon,convertTimeZone}){\n    const SunCalc = require('suncalc');\n    const sunCalcData = SunCalc.getTimes(dateTimeZone,lat,lon);\n    const goldenHourEvening = sunCalcData.goldenHour\n    const goldenHourMorning = sunCalcData.goldenHourEnd\n    const sunsetTime = sunCalcData.sunset;\n\n    const sunsetTimeTimeZone = convertTimeZone(\"sunset:\",sunsetTime, \"golden:\",goldenHourEvening)\n\n    console.log(sunsetTimeTimeZone);\n\n /*    if (dateTimeZone>=goldenHourStart && dateTimeZone<=goldenHourEnd ) {\n        document.body.style.background = \"linear-gradient(90deg, rgba(182,110,0,1) 0%, rgba(230,170,15,1) 35%, rgba(255,214,0,1) 100%)\";\n    } */\n\n    return(<>\n    </>)\n}\n\nexport default Sunset;"]},"metadata":{},"sourceType":"module"}