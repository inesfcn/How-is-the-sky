{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\n\nfunction Night() {\n  //Calculate Sunset UTC\n  let sunsetTime = new Date(data.sys.sunset * 1000);\n  let utcSunset = sunsetTime.getTime() + sunsetTime.getTimezoneOffset() * 60000;\n  let sunsetUTCnd = new Date(utcSunset + 3600000 * offset); //Calculate sunrise UTC\n\n  let sunriseTime = new Date(data.sys.sunrise * 1000);\n  let utcSunrise = sunriseTime.getTime() + sunriseTime.getTimezoneOffset() * 60000;\n  let sunriseUTCnd = new Date(utcSunrise + 3600000 * offset); //Make black on sunset and sunrise\n\n  let sunsetUTCgetTime = sunsetUTCnd.getTime();\n  let dateTimeZoneGetTime = dateTimeZone.getTime();\n\n  if (dateTimeZoneGetTime >= sunsetUTCgetTime || dateTimeZoneGetTime <= sunriseUTCnd) {\n    body.style.backgroundColor = \"#2f3e46\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Night;\n\nvar _c;\n\n$RefreshReg$(_c, \"Night\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/Night.jsx"],"names":["React","Night","sunsetTime","Date","data","sys","sunset","utcSunset","getTime","getTimezoneOffset","sunsetUTCnd","offset","sunriseTime","sunrise","utcSunrise","sunriseUTCnd","sunsetUTCgetTime","dateTimeZoneGetTime","dateTimeZone","body","style","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AACb;AACA,MAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASC,IAAI,CAACC,GAAL,CAASC,MAAT,GAAkB,IAA3B,CAAjB;AACA,MAAIC,SAAS,GACXL,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACO,iBAAX,KAAiC,KAD1D;AAEA,MAAIC,WAAW,GAAG,IAAIP,IAAJ,CAASI,SAAS,GAAG,UAAUI,MAA/B,CAAlB,CALa,CAOb;;AACA,MAAIC,WAAW,GAAG,IAAIT,IAAJ,CAASC,IAAI,CAACC,GAAL,CAASQ,OAAT,GAAmB,IAA5B,CAAlB;AACA,MAAIC,UAAU,GACZF,WAAW,CAACJ,OAAZ,KAAwBI,WAAW,CAACH,iBAAZ,KAAkC,KAD5D;AAEA,MAAIM,YAAY,GAAG,IAAIZ,IAAJ,CAASW,UAAU,GAAG,UAAUH,MAAhC,CAAnB,CAXa,CAab;;AACA,MAAIK,gBAAgB,GAAGN,WAAW,CAACF,OAAZ,EAAvB;AACA,MAAIS,mBAAmB,GAAGC,YAAY,CAACV,OAAb,EAA1B;;AACA,MAAIS,mBAAmB,IAAID,gBAAvB,IAA2CC,mBAAmB,IAAGF,YAArE,EAAmF;AACjFI,IAAAA,IAAI,CAACC,KAAL,CAAWC,eAAX,GAA6B,SAA7B;AACD;;AAED,sBACI,qCADJ;AAIH;;KAxBQpB,K","sourcesContent":["import React from \"react\";\n\nfunction Night (){\n    //Calculate Sunset UTC\n    let sunsetTime = new Date(data.sys.sunset * 1000);\n    let utcSunset =\n      sunsetTime.getTime() + sunsetTime.getTimezoneOffset() * 60000;\n    let sunsetUTCnd = new Date(utcSunset + 3600000 * offset);\n\n    //Calculate sunrise UTC\n    let sunriseTime = new Date(data.sys.sunrise * 1000);\n    let utcSunrise =\n      sunriseTime.getTime() + sunriseTime.getTimezoneOffset() * 60000;\n    let sunriseUTCnd = new Date(utcSunrise + 3600000 * offset);\n\n    //Make black on sunset and sunrise\n    let sunsetUTCgetTime = sunsetUTCnd.getTime();\n    let dateTimeZoneGetTime = dateTimeZone.getTime();\n    if (dateTimeZoneGetTime >= sunsetUTCgetTime || dateTimeZoneGetTime<= sunriseUTCnd) {\n      body.style.backgroundColor = \"#2f3e46\";\n    }\n\n    return(\n        <>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}