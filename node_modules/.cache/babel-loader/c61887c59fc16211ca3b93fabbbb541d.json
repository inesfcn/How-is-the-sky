{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\n\nfunction Sunset({\n  dateTimeZone,\n  lat,\n  lon,\n  convertTimeZone\n}) {\n  //Call library SunCalc\n  const SunCalc = require('suncalc');\n\n  const sunCalcData = SunCalc.getTimes(dateTimeZone, lat, lon); //Golden Hour Morning with Time Zone convert\n\n  const goldenHourMorning = convertTimeZone(sunCalcData.goldenHourEnd);\n  const sunriseTime = convertTimeZone(sunCalcData.sunrise); //Golden Hour Evening with Time Zone convert\n\n  const goldenHourEvening = convertTimeZone(sunCalcData.goldenHour);\n  const sunsetTime = convertTimeZone(sunCalcData.sunset);\n  console.log(`goldenHourMorning:${goldenHourMorning}\\n sunrise:${sunriseTime}\\n goldenHourEvening:${goldenHourEvening} \\n sunset: ${sunsetTime}`); //Sunset if statement\n\n  if (dateTimeZone >= goldenHourEvening && dateTimeZone <= sunsetTime) {\n    document.body.style.background = \"linear-gradient(353deg, rgba(182,110,0,1) 0%, rgba(230,170,15,1) 35%, rgba(255,214,0,1) 100%)\";\n    document.body.style.backgroundSize = \"cover\";\n    document.body.style.backgroundRepeat = \"no-repeat\";\n  } //Sunrise if statement\n\n\n  if (dateTimeZone >= sunriseTime && dateTimeZone <= goldenHourMorning) {\n    document.body.style.background = \" linear-gradient(180deg, rgba(135,244,233,1) 0%, rgba(68,210,247,1) 69%, rgba(156,45,253,1) 100%)\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Sunset;\nexport default Sunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sunset\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/Sunset.jsx"],"names":["React","Sunset","dateTimeZone","lat","lon","convertTimeZone","SunCalc","require","sunCalcData","getTimes","goldenHourMorning","goldenHourEnd","sunriseTime","sunrise","goldenHourEvening","goldenHour","sunsetTime","sunset","console","log","document","body","style","background","backgroundSize","backgroundRepeat"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAiB;AAAEC,EAAAA,YAAF;AAAeC,EAAAA,GAAf;AAAmBC,EAAAA,GAAnB;AAAuBC,EAAAA;AAAvB,CAAjB,EAAyD;AACrD;AACA,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,WAAW,GAAGF,OAAO,CAACG,QAAR,CAAiBP,YAAjB,EAA8BC,GAA9B,EAAkCC,GAAlC,CAApB,CAHqD,CAKrD;;AACA,QAAMM,iBAAiB,GAAGL,eAAe,CAACG,WAAW,CAACG,aAAb,CAAzC;AACA,QAAMC,WAAW,GAAGP,eAAe,CAACG,WAAW,CAACK,OAAb,CAAnC,CAPqD,CASrD;;AACA,QAAMC,iBAAiB,GAAGT,eAAe,CAACG,WAAW,CAACO,UAAb,CAAzC;AACA,QAAMC,UAAU,GAAGX,eAAe,CAACG,WAAW,CAACS,MAAb,CAAlC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBT,iBAAkB,cAAaE,WAAY,wBAAuBE,iBAAkB,eAAcE,UAAW,EAA9I,EAbqD,CAerD;;AACA,MAAId,YAAY,IAAEY,iBAAd,IAAoDZ,YAAY,IAAEc,UAAtE,EAAkF;AAC9EI,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiC,+FAAjC;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,cAApB,GAAmC,OAAnC;AACAJ,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBG,gBAApB,GAAqC,WAArC;AAEH,GArBoD,CAuBrD;;;AACA,MAAIvB,YAAY,IAAEU,WAAd,IAA8CV,YAAY,IAAEQ,iBAAhE,EAAmF;AAC/EU,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiC,mGAAjC;AACH;;AAED,sBAAO,qCAAP;AAEH;;KA9BQtB,M;AAgCT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nfunction Sunset ({ dateTimeZone,lat,lon,convertTimeZone}){\n    //Call library SunCalc\n    const SunCalc = require('suncalc');\n    const sunCalcData = SunCalc.getTimes(dateTimeZone,lat,lon);\n\n    //Golden Hour Morning with Time Zone convert\n    const goldenHourMorning = convertTimeZone(sunCalcData.goldenHourEnd)\n    const sunriseTime = convertTimeZone(sunCalcData.sunrise)\n\n    //Golden Hour Evening with Time Zone convert\n    const goldenHourEvening = convertTimeZone(sunCalcData.goldenHour);\n    const sunsetTime = convertTimeZone(sunCalcData.sunset);\n\n    console.log(`goldenHourMorning:${goldenHourMorning}\\n sunrise:${sunriseTime}\\n goldenHourEvening:${goldenHourEvening} \\n sunset: ${sunsetTime}`); \n\n    //Sunset if statement\n    if (dateTimeZone>=goldenHourEvening &&                  dateTimeZone<=sunsetTime) {\n        document.body.style.background = \"linear-gradient(353deg, rgba(182,110,0,1) 0%, rgba(230,170,15,1) 35%, rgba(255,214,0,1) 100%)\";\n        document.body.style.backgroundSize=\"cover\"\n        document.body.style.backgroundRepeat=\"no-repeat\"\n\n    }\n\n    //Sunrise if statement\n    if (dateTimeZone>=sunriseTime &&                  dateTimeZone<=goldenHourMorning) {\n        document.body.style.background = \" linear-gradient(180deg, rgba(135,244,233,1) 0%, rgba(68,210,247,1) 69%, rgba(156,45,253,1) 100%)\";\n    }\n\n    return(<>\n    </>)\n}\n\nexport default Sunset;"]},"metadata":{},"sourceType":"module"}