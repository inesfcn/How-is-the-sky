{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from \"react\";\n\nfunction Sunset({\n  time,\n  dateTimeZone,\n  lat,\n  lon\n}) {\n  const SunCalc = require('suncalc');\n\n  const sunCalcData = SunCalc.getTimes(time, lat, lon);\n  const goldenHourStart = sunCalcData.goldenHour;\n  const goldenHourEnd = sunCalcData.goldenHourEnd;\n  console.log(sunCalcData.sunset);\n\n  if (dateTimeZone >= goldenHourStart && dateTimeZone <= goldenHourEnd) {\n    document.body.style.background = \"linear-gradient(90deg, rgba(182,110,0,1) 0%, rgba(230,170,15,1) 35%, rgba(255,214,0,1) 100%)\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Sunset;\nexport default Sunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sunset\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/Sunset.jsx"],"names":["React","Sunset","time","dateTimeZone","lat","lon","SunCalc","require","sunCalcData","getTimes","goldenHourStart","goldenHour","goldenHourEnd","console","log","sunset","document","body","style","background"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,YAAP;AAAoBC,EAAAA,GAApB;AAAwBC,EAAAA;AAAxB,CAAjB,EAA8C;AAC1C,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,WAAW,GAAGF,OAAO,CAACG,QAAR,CAAiBP,IAAjB,EAAsBE,GAAtB,EAA0BC,GAA1B,CAApB;AACA,QAAMK,eAAe,GAAGF,WAAW,CAACG,UAApC;AACA,QAAMC,aAAa,GAAGJ,WAAW,CAACI,aAAlC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACO,MAAxB;;AAEA,MAAIZ,YAAY,IAAEO,eAAd,IAAiCP,YAAY,IAAES,aAAnD,EAAmE;AAC/DI,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiC,8FAAjC;AACH;;AAED,sBAAO,qCAAP;AAEH;;KAdQlB,M;AAgBT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nfunction Sunset ({time, dateTimeZone,lat,lon}){\n    const SunCalc = require('suncalc');\n    const sunCalcData = SunCalc.getTimes(time,lat,lon);\n    const goldenHourStart = sunCalcData.goldenHour\n    const goldenHourEnd = sunCalcData.goldenHourEnd\n    \n    console.log(sunCalcData.sunset);\n\n    if (dateTimeZone>=goldenHourStart && dateTimeZone<=goldenHourEnd ) {\n        document.body.style.background = \"linear-gradient(90deg, rgba(182,110,0,1) 0%, rgba(230,170,15,1) 35%, rgba(255,214,0,1) 100%)\";\n    }\n\n    return(<>\n    </>)\n}\n\nexport default Sunset;"]},"metadata":{},"sourceType":"module"}