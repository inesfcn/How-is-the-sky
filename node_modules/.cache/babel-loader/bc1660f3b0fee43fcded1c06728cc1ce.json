{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx\";\nimport React from \"react\";\n\nfunction DisplaySky({\n  city,\n  setSubmit,\n  temp,\n  desc,\n  currentTime\n}) {\n  // No decimal value for temperature\n  let temperature = parseInt(temp);\n  let skyBlueInitRGBA = [135, 206, 250, 1];\n  let cloudAmount = Number(clouds); //Define individual RGBA values according to cloud amount\n\n  skyBlueInitRGBA[1] -= cloudAmount;\n  skyBlueInitRGBA[0] -= cloudAmount - cloudAmount / 2;\n  skyBlueInitRGBA[2] -= cloudAmount;\n  skyBlueInitRGBA[3] -= cloudAmount * 0.01;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-displays\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"city-info\",\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"time-info\",\n        children: [\" | \", currentTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"temp-info\",\n        children: [\" | \", temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"temp-desc\",\n        children: [\" | \", desc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"anotherCity\",\n      onClick: () => setSubmit(false),\n      children: \"Check another city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DisplaySky;\nexport default DisplaySky;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaySky\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx"],"names":["React","DisplaySky","city","setSubmit","temp","desc","currentTime","temperature","parseInt","skyBlueInitRGBA","cloudAmount","Number","clouds"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,SAAN;AAAgBC,EAAAA,IAAhB;AAAqBC,EAAAA,IAArB;AAA0BC,EAAAA;AAA1B,CAApB,EAA2D;AACvD;AACA,MAAIC,WAAW,GAAGC,QAAQ,CAACJ,IAAD,CAA1B;AAEA,MAAIK,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB,CAAtB;AACA,MAAIC,WAAW,GAAGC,MAAM,CAACC,MAAD,CAAxB,CALuD,CAOvD;;AACAH,EAAAA,eAAe,CAAC,CAAD,CAAf,IAAsBC,WAAtB;AACAD,EAAAA,eAAe,CAAC,CAAD,CAAf,IAAsBC,WAAW,GAAGA,WAAW,GAAG,CAAlD;AACAD,EAAAA,eAAe,CAAC,CAAD,CAAf,IAAsBC,WAAtB;AACAD,EAAAA,eAAe,CAAC,CAAD,CAAf,IAAsBC,WAAW,GAAG,IAApC;AAEA,sBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBAA2BR;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,0BAA8BI,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,0BAA8BC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,0BAA8BF,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAA8C,MAAA,OAAO,EAAE,MAAIF,SAAS,CAAC,KAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWH;;KAxBQF,U;AA0BT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nfunction DisplaySky({city,setSubmit,temp,desc,currentTime}){\n    // No decimal value for temperature\n    let temperature = parseInt(temp)\n\n    let skyBlueInitRGBA = [135, 206, 250, 1];\n    let cloudAmount = Number(clouds);\n\n    //Define individual RGBA values according to cloud amount\n    skyBlueInitRGBA[1] -= cloudAmount;\n    skyBlueInitRGBA[0] -= cloudAmount - cloudAmount / 2;\n    skyBlueInitRGBA[2] -= cloudAmount;\n    skyBlueInitRGBA[3] -= cloudAmount * 0.01;\n   \n    return(\n    <div className=\"info-displays\">\n        <div className=\"infoDisplay\">\n            <h1 className=\"city-info\">{city}</h1>\n            <h1 className=\"time-info\"> | {currentTime}</h1>\n            <h1 className=\"temp-info\"> | {temperature}Â°C</h1>\n            <h1 className=\"temp-desc\"> | {desc}</h1>\n        </div>\n        <button type=\"button\" className=\"anotherCity\" onClick={()=>setSubmit(false)}>Check another city</button>\n\t</div>\n    )\n}\n\nexport default DisplaySky"]},"metadata":{},"sourceType":"module"}