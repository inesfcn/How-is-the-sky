{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx\";\nimport React from \"react\";\nimport SkyColor from \"./SkyColor\";\n\nfunction DisplaySky({\n  city,\n  temp,\n  desc,\n  currentTime,\n  clouds,\n  dateTimeZone,\n  convertTimeZone,\n  lat,\n  lon\n}) {\n  // No decimal value for temperature\n  let temperature = parseInt(temp);\n  console.log(temp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-displays\",\n      children: [temp, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"city-info\",\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"time-info\",\n          children: [\" | \", currentTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temp-info\",\n          children: [\" | \", temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temp-desc\",\n          children: [\" | \", desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temp-clouds\",\n          children: [\" | clouds: \", clouds, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SkyColor, {\n      clouds: clouds,\n      dateTimeZone: dateTimeZone,\n      convertTimeZone: convertTimeZone,\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = DisplaySky;\nexport default DisplaySky;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaySky\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx"],"names":["React","SkyColor","DisplaySky","city","temp","desc","currentTime","clouds","dateTimeZone","convertTimeZone","lat","lon","temperature","parseInt","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,IAAN;AAAWC,EAAAA,IAAX;AAAgBC,EAAAA,WAAhB;AAA4BC,EAAAA,MAA5B;AAAmCC,EAAAA,YAAnC;AAAgDC,EAAAA,eAAhD;AAAgEC,EAAAA,GAAhE;AAAoEC,EAAAA;AAApE,CAApB,EAA6F;AACzF;AACA,MAAIC,WAAW,GAAGC,QAAQ,CAACT,IAAD,CAA1B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBACA;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACKA,IADL,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,oBAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,4BAA8BG,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,4BAA8BM,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,4BAA8BP,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oCAAwCE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAYA,QAAC,QAAD;AACA,MAAA,MAAM,EAAEA,MADR;AAEA,MAAA,YAAY,EAAEC,YAFd;AAGA,MAAA,eAAe,EAAEC,eAHjB;AAIA,MAAA,GAAG,EAAEC,GAJL;AAKA,MAAA,GAAG,EAAEC;AALL;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADA;AAsBH;;KA3BQT,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport SkyColor from \"./SkyColor\"\n\nfunction DisplaySky({city,temp,desc,currentTime,clouds,dateTimeZone,convertTimeZone,lat,lon}){\n    // No decimal value for temperature\n    let temperature = parseInt(temp)\n    console.log(temp);\n   \n    return(\n    <>\n    <div className=\"info-displays\">\n        {temp}\n        <div className=\"infoDisplay\">\n            <h1 className=\"city-info\">{city}</h1>\n            <h1 className=\"time-info\"> | {currentTime}</h1>\n            <h1 className=\"temp-info\"> | {temperature}Â°C</h1>\n            <h1 className=\"temp-desc\"> | {desc}</h1>\n            <h1 className=\"temp-clouds\"> | clouds: {clouds}%</h1>\n        </div>\n        {/* <button type=\"button\" className=\"anotherCity\" onClick={()=>setSubmit(false)}>Check another city</button> */}\n\t</div>\n    <SkyColor\n    clouds={clouds}\n    dateTimeZone={dateTimeZone}\n    convertTimeZone={convertTimeZone}\n    lat={lat}\n    lon={lon}\n    />\n    </>\n    )\n}\n\nexport default DisplaySky"]},"metadata":{},"sourceType":"module"}