{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx\";\nimport React from \"react\";\nimport SkyColor from \"./SkyColor\";\n\nfunction DisplaySky({\n  city,\n  setSubmit,\n  temp,\n  desc,\n  currentTime,\n  clouds,\n  dateTimeZone,\n  convertTimeZone,\n  lat,\n  lon\n}) {\n  // No decimal value for temperature\n  let temperature = parseInt(temp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-displays\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"city-info\",\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"time-info\",\n          children: [\" | \", currentTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temp-info\",\n          children: [\" | \", temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temp-desc\",\n          children: [\" | \", desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temp-clouds\",\n          children: [\" | clouds: \", clouds, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"anotherCity\",\n        onClick: () => setSubmit(false),\n        children: \"Check another city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SkyColor, {\n      clouds: data.clouds.all,\n      dateTimeZone: dateTimeZone,\n      convertTimeZone: convertTimeZone,\n      lat: data.coord.lat,\n      lon: data.coord.lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = DisplaySky;\nexport default DisplaySky;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaySky\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/DisplaySky.jsx"],"names":["React","SkyColor","DisplaySky","city","setSubmit","temp","desc","currentTime","clouds","dateTimeZone","convertTimeZone","lat","lon","temperature","parseInt","data","all","coord"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,SAAN;AAAgBC,EAAAA,IAAhB;AAAqBC,EAAAA,IAArB;AAA0BC,EAAAA,WAA1B;AAAsCC,EAAAA,MAAtC;AAA6CC,EAAAA,YAA7C;AAA0DC,EAAAA,eAA1D;AAA0EC,EAAAA,GAA1E;AAA8EC,EAAAA;AAA9E,CAApB,EAAuG;AACnG;AACA,MAAIC,WAAW,GAAGC,QAAQ,CAACT,IAAD,CAA1B;AAEA,sBACA;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,oBAA2BF;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,4BAA8BI,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,4BAA8BM,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,4BAA8BP,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oCAAwCE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAA8C,QAAA,OAAO,EAAE,MAAIJ,SAAS,CAAC,KAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAWA,QAAC,QAAD;AACA,MAAA,MAAM,EAAEW,IAAI,CAACP,MAAL,CAAYQ,GADpB;AAEA,MAAA,YAAY,EAAEP,YAFd;AAGA,MAAA,eAAe,EAAEC,eAHjB;AAIA,MAAA,GAAG,EAAEK,IAAI,CAACE,KAAL,CAAWN,GAJhB;AAKA,MAAA,GAAG,EAAEI,IAAI,CAACE,KAAL,CAAWL;AALhB;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADA;AAqBH;;KAzBQV,U;AA2BT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport SkyColor from \"./SkyColor\"\n\nfunction DisplaySky({city,setSubmit,temp,desc,currentTime,clouds,dateTimeZone,convertTimeZone,lat,lon}){\n    // No decimal value for temperature\n    let temperature = parseInt(temp)\n   \n    return(\n    <>\n    <div className=\"info-displays\">\n        <div className=\"infoDisplay\">\n            <h1 className=\"city-info\">{city}</h1>\n            <h1 className=\"time-info\"> | {currentTime}</h1>\n            <h1 className=\"temp-info\"> | {temperature}Â°C</h1>\n            <h1 className=\"temp-desc\"> | {desc}</h1>\n            <h1 className=\"temp-clouds\"> | clouds: {clouds}%</h1>\n        </div>\n        <button type=\"button\" className=\"anotherCity\" onClick={()=>setSubmit(false)}>Check another city</button>\n\t</div>\n    <SkyColor\n    clouds={data.clouds.all}\n    dateTimeZone={dateTimeZone}\n    convertTimeZone={convertTimeZone}\n    lat={data.coord.lat}\n    lon={data.coord.lon}\n    />\n    </>\n    )\n}\n\nexport default DisplaySky"]},"metadata":{},"sourceType":"module"}