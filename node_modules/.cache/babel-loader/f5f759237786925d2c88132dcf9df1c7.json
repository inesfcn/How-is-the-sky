{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CityInput from \"./CityInput\";\nimport DisplaySky from \"./DisplaySky\";\nimport '../css/App.css';\n\nfunction App() {\n  _s();\n\n  //Get city from Input\n  const [city, setCity] = useState(\"\");\n\n  function handleCityInput(e) {\n    setCity(e.target.value);\n  } //Get info on enter\n\n\n  const [submit, setSubmit] = useState(false);\n\n  function handleSubmitOnEnter(e) {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      setSubmit(true);\n    }\n  } //Fetch API\n\n\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const URI = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(URI);\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchData();\n  }, [URI]);\n  const temp = parseInt([data.main.temp]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!submit && /*#__PURE__*/_jsxDEV(CityInput, {\n      city: city,\n      handleCityInput: handleCityInput,\n      handleSubmitOnEnter: handleSubmitOnEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), submit && /*#__PURE__*/_jsxDEV(DisplaySky, {\n      city: city,\n      setSubmit: setSubmit,\n      temp: temp,\n      desc: data.weather[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"qnqKqeZf3sQo+NEHJ8/RWghCm1o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/App.jsx"],"names":["React","useState","useEffect","CityInput","DisplaySky","App","city","setCity","handleCityInput","e","target","value","submit","setSubmit","handleSubmitOnEnter","key","preventDefault","API_KEY","process","env","REACT_APP_API_KEY","URI","data","setData","fetchData","response","fetch","json","error","console","message","temp","parseInt","main","weather","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,gBAAP;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;;AACA,WAASO,eAAT,CAAyBC,CAAzB,EAA2B;AACzBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GANY,CAQb;;;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC,KAAD,CAAnC;;AACA,WAASa,mBAAT,CAA6BL,CAA7B,EAA+B;AAC7B,QAAIA,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AACrBN,MAAAA,CAAC,CAACO,cAAF;AACAH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAfY,CAiBb;;;AACA,QAAMI,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,QAAMC,GAAG,GAAI,oDAAmDf,IAAK,uBAAsBW,OAAQ,EAAnG;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,SAAS,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAnB;AACAJ,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAJD,CAIE,OAAOM,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACH;AACA,KARD;;AASAN,IAAAA,SAAS;AACZ,GAXQ,EAWN,CAACH,GAAD,CAXM,CAAT;AAaA,QAAMU,IAAI,GAAGC,QAAQ,CAAC,CAACV,IAAI,CAACW,IAAL,CAAUF,IAAX,CAAD,CAArB;AAEA,sBACE;AAAA,eAEG,CAACnB,MAAD,iBACD,QAAC,SAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,eAAe,EAAEE,eAFnB;AAGE,MAAA,mBAAmB,EAAEM;AAHvB;AAAA;AAAA;AAAA;AAAA,YAHF,EAWGF,MAAM,iBAAI,QAAC,UAAD;AACT,MAAA,IAAI,EAAEN,IADG;AAET,MAAA,SAAS,EAAEO,SAFF;AAGT,MAAA,IAAI,EAAEkB,IAHG;AAIT,MAAA,IAAI,EAAET,IAAI,CAACY,OAAL,CAAa,CAAb,EAAgBC;AAJb;AAAA;AAAA;AAAA;AAAA,YAXb;AAAA,kBADF;AAqBD;;GA1DQ9B,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport CityInput from \"./CityInput\";\nimport DisplaySky from \"./DisplaySky\";\nimport '../css/App.css';\n\n\nfunction App() {\n\n  //Get city from Input\n  const [city,setCity] = useState(\"\");\n  function handleCityInput(e){\n    setCity(e.target.value)\n  }\n\n  //Get info on enter\n  const [submit,setSubmit] = useState(false)\n  function handleSubmitOnEnter(e){\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      setSubmit(true)\n    }\n  }\n\n  //Fetch API\n  const API_KEY = process.env.REACT_APP_API_KEY \n  const URI = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`;\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n      const fetchData = async () => {\n      try {\n          const response = await fetch(URI);\n          const data = await response.json();\n          setData(data);\n      } catch (error) {\n          console.error(error.message);\n      }\n      };\n      fetchData();\n  }, [URI]);\n\n  const temp = parseInt([data.main.temp])\n\n  return (\n    <>\n      {/* Input */}\n      {!submit &&\n      <CityInput\n        city={city}\n        handleCityInput={handleCityInput}\n        handleSubmitOnEnter={handleSubmitOnEnter}\n      />\n      }\n\n      {/* Display */}\n      {submit && <DisplaySky \n        city={city}\n        setSubmit={setSubmit}\n        temp={temp}\n        desc={data.weather[0].description}\n      />}\n      \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}