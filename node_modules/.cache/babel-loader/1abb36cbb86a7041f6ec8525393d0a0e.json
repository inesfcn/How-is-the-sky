{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/FetchData.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\nfunction FetchData() {\n  _s();\n\n  const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=ceb3c407c92ea3f7e0ea24125a3072df`;\n  const [data, setData] = useState([]);\n  const [searchURI, setSearchURI] = useState(URI);\n\n  const handleClick = search => {\n    setSearchURI(`${URI}${search}`);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(searchURI);\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchData();\n  }, [searchURI]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick('character'),\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick('location'),\n      children: \"Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick('episode'),\n      children: \"Episodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FetchData, \"SQrhD+gs+htut5q8nRbkhVBJpjk=\");\n\n_c = FetchData;\n;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"sources":["/home/dcil121/Desktop/dci/SPA/exercises/weather-sky-react/weather-sky/src/components/FetchData.jsx"],"names":["React","useState","useEffect","useCallback","FetchData","url","city","data","setData","searchURI","setSearchURI","URI","handleClick","search","fetchData","response","fetch","json","error","console","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AAEA,SAASC,SAAT,GAAsB;AAAA;;AAClB,QAAMC,GAAG,GAAI,oDAAmDC,IAAK,sDAArE;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACU,GAAD,CAA1C;;AAEA,QAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9BH,IAAAA,YAAY,CAAE,GAAEC,GAAI,GAAEE,MAAO,EAAjB,CAAZ;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,SAAD,CAA5B;AACA,cAAMF,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAnB;AACAT,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAJD,CAIE,OAAOW,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACH;AACA,KARD;;AASAN,IAAAA,SAAS;AACZ,GAXQ,EAWN,CAACL,SAAD,CAXM,CAAT;AAaA,sBACI;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAE,MAAMG,WAAW,CAAC,WAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,UAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,SAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA7BQR,S;;KAAAA,S;AA6BR;AAED,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nfunction FetchData () {\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=ceb3c407c92ea3f7e0ea24125a3072df`;\n    const [data, setData] = useState([]);\n    const [searchURI, setSearchURI] = useState(URI);\n  \n    const handleClick = (search) => {\n      setSearchURI(`${URI}${search}`);\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n        try {\n            const response = await fetch(searchURI);\n            const data = await response.json();\n            setData(data);\n        } catch (error) {\n            console.error(error.message);\n        }\n        };\n        fetchData();\n    }, [searchURI]);\n\n    return (\n        <div>\n        <button onClick={() => handleClick('character')}>Characters</button>\n        <button onClick={() => handleClick('location')}>Locations</button>\n        <button onClick={() => handleClick('episode')}>Episodes</button>\n        </div>\n    );\n};\n\nexport default FetchData;"]},"metadata":{},"sourceType":"module"}